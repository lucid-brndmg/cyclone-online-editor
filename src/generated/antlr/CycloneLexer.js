// Generated from grammar/CycloneLexer.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,115,822,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,
2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,
7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,
2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,
34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,
7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,
48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,
2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,
77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,
2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,
92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,
7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,
105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,
111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,2,117,7,
117,2,118,7,118,2,119,7,119,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,
1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,
11,1,11,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,
1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,
24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,
1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,
35,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,
1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,
45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,
1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,
51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,
1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,
54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,
1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,
59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,
1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,
63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,66,
1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,
67,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,
1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,73,1,73,1,
73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,75,
1,76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,
77,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,80,1,80,
1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,1,82,1,82,1,82,1,82,1,83,1,
83,1,83,1,83,1,83,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,86,1,86,1,86,1,86,
1,86,1,86,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,87,1,87,1,87,1,88,1,88,1,
88,1,88,1,88,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,90,1,90,
1,90,1,90,1,91,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,
93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,94,1,94,1,94,1,95,1,95,1,95,1,95,
1,95,1,95,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,97,1,97,1,97,1,97,1,
97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,100,1,100,1,
100,1,100,1,100,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,
102,1,102,1,102,1,102,1,102,1,102,1,102,1,103,1,103,1,103,1,104,1,104,1,
104,1,104,1,104,1,105,4,105,718,8,105,11,105,12,105,719,1,106,4,106,723,
8,106,11,106,12,106,724,1,106,1,106,4,106,729,8,106,11,106,12,106,730,1,
107,1,107,1,107,3,107,736,8,107,1,107,1,107,1,108,1,108,1,108,5,108,743,
8,108,10,108,12,108,746,9,108,1,108,1,108,1,109,1,109,1,109,1,109,1,109,
1,109,1,109,1,109,1,109,3,109,759,8,109,1,110,1,110,1,110,1,111,1,111,5,
111,766,8,111,10,111,12,111,769,9,111,1,112,1,112,1,112,1,112,5,112,775,
8,112,10,112,12,112,778,9,112,1,112,1,112,1,112,1,112,1,112,1,113,1,113,
1,113,1,113,5,113,789,8,113,10,113,12,113,792,9,113,1,113,1,113,1,114,1,
114,3,114,798,8,114,1,114,1,114,1,115,1,115,1,116,1,116,1,116,1,116,1,116,
1,116,1,116,1,116,3,116,812,8,116,1,117,1,117,1,118,1,118,1,119,1,119,1,
119,3,119,821,8,119,1,776,0,120,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,
91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,
67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,
155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,
88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,
197,99,199,100,201,101,203,102,205,103,207,104,209,105,211,106,213,107,215,
108,217,109,219,110,221,111,223,112,225,113,227,114,229,115,231,0,233,0,
235,0,237,0,239,0,1,0,7,4,0,10,10,13,13,39,39,92,92,4,0,10,10,13,13,34,34,
92,92,2,0,10,10,13,13,3,0,9,9,12,12,32,32,8,0,34,34,39,39,92,92,98,98,102,
102,110,110,114,114,116,116,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
97,122,831,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,
0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,
0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,
111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,
1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,
0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,
0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,
0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,
0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,
173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,
1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,
0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,
0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,
0,0,215,1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,0,
0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,0,0,1,241,1,0,0,0,3,244,1,0,0,0,5,
248,1,0,0,0,7,250,1,0,0,0,9,252,1,0,0,0,11,254,1,0,0,0,13,257,1,0,0,0,15,
260,1,0,0,0,17,262,1,0,0,0,19,264,1,0,0,0,21,267,1,0,0,0,23,269,1,0,0,0,
25,271,1,0,0,0,27,274,1,0,0,0,29,276,1,0,0,0,31,278,1,0,0,0,33,280,1,0,0,
0,35,282,1,0,0,0,37,285,1,0,0,0,39,287,1,0,0,0,41,289,1,0,0,0,43,292,1,0,
0,0,45,294,1,0,0,0,47,296,1,0,0,0,49,298,1,0,0,0,51,300,1,0,0,0,53,302,1,
0,0,0,55,304,1,0,0,0,57,306,1,0,0,0,59,310,1,0,0,0,61,313,1,0,0,0,63,315,
1,0,0,0,65,317,1,0,0,0,67,319,1,0,0,0,69,322,1,0,0,0,71,325,1,0,0,0,73,328,
1,0,0,0,75,330,1,0,0,0,77,333,1,0,0,0,79,336,1,0,0,0,81,339,1,0,0,0,83,342,
1,0,0,0,85,345,1,0,0,0,87,348,1,0,0,0,89,351,1,0,0,0,91,354,1,0,0,0,93,357,
1,0,0,0,95,364,1,0,0,0,97,371,1,0,0,0,99,377,1,0,0,0,101,381,1,0,0,0,103,
385,1,0,0,0,105,392,1,0,0,0,107,398,1,0,0,0,109,408,1,0,0,0,111,416,1,0,
0,0,113,423,1,0,0,0,115,429,1,0,0,0,117,434,1,0,0,0,119,442,1,0,0,0,121,
448,1,0,0,0,123,459,1,0,0,0,125,465,1,0,0,0,127,470,1,0,0,0,129,477,1,0,
0,0,131,483,1,0,0,0,133,486,1,0,0,0,135,492,1,0,0,0,137,502,1,0,0,0,139,
506,1,0,0,0,141,511,1,0,0,0,143,516,1,0,0,0,145,521,1,0,0,0,147,528,1,0,
0,0,149,533,1,0,0,0,151,539,1,0,0,0,153,545,1,0,0,0,155,551,1,0,0,0,157,
560,1,0,0,0,159,567,1,0,0,0,161,572,1,0,0,0,163,577,1,0,0,0,165,583,1,0,
0,0,167,587,1,0,0,0,169,592,1,0,0,0,171,595,1,0,0,0,173,599,1,0,0,0,175,
609,1,0,0,0,177,615,1,0,0,0,179,620,1,0,0,0,181,630,1,0,0,0,183,634,1,0,
0,0,185,639,1,0,0,0,187,646,1,0,0,0,189,654,1,0,0,0,191,657,1,0,0,0,193,
663,1,0,0,0,195,671,1,0,0,0,197,678,1,0,0,0,199,683,1,0,0,0,201,687,1,0,
0,0,203,692,1,0,0,0,205,701,1,0,0,0,207,708,1,0,0,0,209,711,1,0,0,0,211,
717,1,0,0,0,213,722,1,0,0,0,215,732,1,0,0,0,217,739,1,0,0,0,219,758,1,0,
0,0,221,760,1,0,0,0,223,763,1,0,0,0,225,770,1,0,0,0,227,784,1,0,0,0,229,
797,1,0,0,0,231,801,1,0,0,0,233,803,1,0,0,0,235,813,1,0,0,0,237,815,1,0,
0,0,239,820,1,0,0,0,241,242,5,45,0,0,242,243,5,62,0,0,243,2,1,0,0,0,244,
245,5,60,0,0,245,246,5,45,0,0,246,247,5,62,0,0,247,4,1,0,0,0,248,249,5,64,
0,0,249,6,1,0,0,0,250,251,5,124,0,0,251,8,1,0,0,0,252,253,5,58,0,0,253,10,
1,0,0,0,254,255,5,58,0,0,255,256,5,58,0,0,256,12,1,0,0,0,257,258,5,58,0,
0,258,259,5,61,0,0,259,14,1,0,0,0,260,261,5,44,0,0,261,16,1,0,0,0,262,263,
5,46,0,0,263,18,1,0,0,0,264,265,5,46,0,0,265,266,5,46,0,0,266,20,1,0,0,0,
267,268,5,61,0,0,268,22,1,0,0,0,269,270,5,62,0,0,270,24,1,0,0,0,271,272,
5,62,0,0,272,273,5,61,0,0,273,26,1,0,0,0,274,275,5,35,0,0,275,28,1,0,0,0,
276,277,5,123,0,0,277,30,1,0,0,0,278,279,5,91,0,0,279,32,1,0,0,0,280,281,
5,60,0,0,281,34,1,0,0,0,282,283,5,60,0,0,283,284,5,61,0,0,284,36,1,0,0,0,
285,286,5,40,0,0,286,38,1,0,0,0,287,288,5,45,0,0,288,40,1,0,0,0,289,290,
5,33,0,0,290,291,5,61,0,0,291,42,1,0,0,0,292,293,5,125,0,0,293,44,1,0,0,
0,294,295,5,93,0,0,295,46,1,0,0,0,296,297,5,41,0,0,297,48,1,0,0,0,298,299,
5,59,0,0,299,50,1,0,0,0,300,301,5,47,0,0,301,52,1,0,0,0,302,303,5,42,0,0,
303,54,1,0,0,0,304,305,5,43,0,0,305,56,1,0,0,0,306,307,5,120,0,0,307,308,
5,111,0,0,308,309,5,114,0,0,309,58,1,0,0,0,310,311,5,61,0,0,311,312,5,62,
0,0,312,60,1,0,0,0,313,314,5,33,0,0,314,62,1,0,0,0,315,316,5,94,0,0,316,
64,1,0,0,0,317,318,5,95,0,0,318,66,1,0,0,0,319,320,5,43,0,0,320,321,5,43,
0,0,321,68,1,0,0,0,322,323,5,45,0,0,323,324,5,45,0,0,324,70,1,0,0,0,325,
326,5,42,0,0,326,327,5,42,0,0,327,72,1,0,0,0,328,329,5,37,0,0,329,74,1,0,
0,0,330,331,5,124,0,0,331,332,5,124,0,0,332,76,1,0,0,0,333,334,5,38,0,0,
334,335,5,38,0,0,335,78,1,0,0,0,336,337,5,43,0,0,337,338,5,61,0,0,338,80,
1,0,0,0,339,340,5,45,0,0,340,341,5,61,0,0,341,82,1,0,0,0,342,343,5,42,0,
0,343,344,5,61,0,0,344,84,1,0,0,0,345,346,5,47,0,0,346,347,5,61,0,0,347,
86,1,0,0,0,348,349,5,60,0,0,349,350,5,60,0,0,350,88,1,0,0,0,351,352,5,62,
0,0,352,353,5,62,0,0,353,90,1,0,0,0,354,355,5,61,0,0,355,356,5,61,0,0,356,
92,1,0,0,0,357,358,5,103,0,0,358,359,5,108,0,0,359,360,5,111,0,0,360,361,
5,98,0,0,361,362,5,97,0,0,362,363,5,108,0,0,363,94,1,0,0,0,364,365,5,110,
0,0,365,366,5,97,0,0,366,367,5,116,0,0,367,368,5,105,0,0,368,369,5,118,0,
0,369,370,5,101,0,0,370,96,1,0,0,0,371,372,5,100,0,0,372,373,5,101,0,0,373,
374,5,98,0,0,374,375,5,117,0,0,375,376,5,103,0,0,376,98,1,0,0,0,377,378,
5,108,0,0,378,379,5,111,0,0,379,380,5,103,0,0,380,100,1,0,0,0,381,382,5,
100,0,0,382,383,5,111,0,0,383,384,5,116,0,0,384,102,1,0,0,0,385,386,5,111,
0,0,386,387,5,117,0,0,387,388,5,116,0,0,388,389,5,112,0,0,389,390,5,117,
0,0,390,391,5,116,0,0,391,104,1,0,0,0,392,393,5,116,0,0,393,394,5,114,0,
0,394,395,5,97,0,0,395,396,5,99,0,0,396,397,5,101,0,0,397,106,1,0,0,0,398,
399,5,112,0,0,399,400,5,114,0,0,400,401,5,101,0,0,401,402,5,99,0,0,402,403,
5,105,0,0,403,404,5,115,0,0,404,405,5,105,0,0,405,406,5,111,0,0,406,407,
5,110,0,0,407,108,1,0,0,0,408,409,5,116,0,0,409,410,5,105,0,0,410,411,5,
109,0,0,411,412,5,101,0,0,412,413,5,111,0,0,413,414,5,117,0,0,414,415,5,
116,0,0,415,110,1,0,0,0,416,417,5,100,0,0,417,418,5,101,0,0,418,419,5,116,
0,0,419,420,5,101,0,0,420,421,5,99,0,0,421,422,5,116,0,0,422,112,1,0,0,0,
423,424,5,115,0,0,424,425,5,116,0,0,425,426,5,97,0,0,426,427,5,116,0,0,427,
428,5,101,0,0,428,114,1,0,0,0,429,430,5,110,0,0,430,431,5,111,0,0,431,432,
5,100,0,0,432,433,5,101,0,0,433,116,1,0,0,0,434,435,5,109,0,0,435,436,5,
97,0,0,436,437,5,99,0,0,437,438,5,104,0,0,438,439,5,105,0,0,439,440,5,110,
0,0,440,441,5,101,0,0,441,118,1,0,0,0,442,443,5,103,0,0,443,444,5,114,0,
0,444,445,5,97,0,0,445,446,5,112,0,0,446,447,5,104,0,0,447,120,1,0,0,0,448,
449,5,116,0,0,449,450,5,114,0,0,450,451,5,97,0,0,451,452,5,110,0,0,452,453,
5,115,0,0,453,454,5,105,0,0,454,455,5,116,0,0,455,456,5,105,0,0,456,457,
5,111,0,0,457,458,5,110,0,0,458,122,1,0,0,0,459,460,5,116,0,0,460,461,5,
114,0,0,461,462,5,97,0,0,462,463,5,110,0,0,463,464,5,115,0,0,464,124,1,0,
0,0,465,466,5,101,0,0,466,467,5,100,0,0,467,468,5,103,0,0,468,469,5,101,
0,0,469,126,1,0,0,0,470,471,5,114,0,0,471,472,5,101,0,0,472,473,5,99,0,0,
473,474,5,111,0,0,474,475,5,114,0,0,475,476,5,100,0,0,476,128,1,0,0,0,477,
478,5,99,0,0,478,479,5,111,0,0,479,480,5,110,0,0,480,481,5,115,0,0,481,482,
5,116,0,0,482,130,1,0,0,0,483,484,5,111,0,0,484,485,5,110,0,0,485,132,1,
0,0,0,486,487,5,108,0,0,487,488,5,97,0,0,488,489,5,98,0,0,489,490,5,101,
0,0,490,491,5,108,0,0,491,134,1,0,0,0,492,493,5,105,0,0,493,494,5,110,0,
0,494,495,5,118,0,0,495,496,5,97,0,0,496,497,5,114,0,0,497,498,5,105,0,0,
498,499,5,97,0,0,499,500,5,110,0,0,500,501,5,116,0,0,501,136,1,0,0,0,502,
503,5,105,0,0,503,504,5,110,0,0,504,505,5,116,0,0,505,138,1,0,0,0,506,507,
5,98,0,0,507,508,5,111,0,0,508,509,5,111,0,0,509,510,5,108,0,0,510,140,1,
0,0,0,511,512,5,114,0,0,512,513,5,101,0,0,513,514,5,97,0,0,514,515,5,108,
0,0,515,142,1,0,0,0,516,517,5,99,0,0,517,518,5,104,0,0,518,519,5,97,0,0,
519,520,5,114,0,0,520,144,1,0,0,0,521,522,5,115,0,0,522,523,5,116,0,0,523,
524,5,114,0,0,524,525,5,105,0,0,525,526,5,110,0,0,526,527,5,103,0,0,527,
146,1,0,0,0,528,529,5,101,0,0,529,530,5,110,0,0,530,531,5,117,0,0,531,532,
5,109,0,0,532,148,1,0,0,0,533,534,5,119,0,0,534,535,5,104,0,0,535,536,5,
101,0,0,536,537,5,114,0,0,537,538,5,101,0,0,538,150,1,0,0,0,539,540,5,115,
0,0,540,541,5,116,0,0,541,542,5,97,0,0,542,543,5,114,0,0,543,544,5,116,0,
0,544,152,1,0,0,0,545,546,5,102,0,0,546,547,5,105,0,0,547,548,5,110,0,0,
548,549,5,97,0,0,549,550,5,108,0,0,550,154,1,0,0,0,551,552,5,97,0,0,552,
553,5,98,0,0,553,554,5,115,0,0,554,555,5,116,0,0,555,556,5,114,0,0,556,557,
5,97,0,0,557,558,5,99,0,0,558,559,5,116,0,0,559,156,1,0,0,0,560,561,5,110,
0,0,561,562,5,111,0,0,562,563,5,114,0,0,563,564,5,109,0,0,564,565,5,97,0,
0,565,566,5,108,0,0,566,158,1,0,0,0,567,568,5,112,0,0,568,569,5,114,0,0,
569,570,5,101,0,0,570,571,5,118,0,0,571,160,1,0,0,0,572,573,5,103,0,0,573,
574,5,111,0,0,574,575,5,97,0,0,575,576,5,108,0,0,576,162,1,0,0,0,577,578,
5,99,0,0,578,579,5,104,0,0,579,580,5,101,0,0,580,581,5,99,0,0,581,582,5,
107,0,0,582,164,1,0,0,0,583,584,5,102,0,0,584,585,5,111,0,0,585,586,5,114,
0,0,586,166,1,0,0,0,587,588,5,115,0,0,588,589,5,116,0,0,589,590,5,111,0,
0,590,591,5,112,0,0,591,168,1,0,0,0,592,593,5,97,0,0,593,594,5,116,0,0,594,
170,1,0,0,0,595,596,5,118,0,0,596,597,5,105,0,0,597,598,5,97,0,0,598,172,
1,0,0,0,599,600,5,99,0,0,600,601,5,111,0,0,601,602,5,110,0,0,602,603,5,100,
0,0,603,604,5,105,0,0,604,605,5,116,0,0,605,606,5,105,0,0,606,607,5,111,
0,0,607,608,5,110,0,0,608,174,1,0,0,0,609,610,5,114,0,0,610,611,5,101,0,
0,611,612,5,97,0,0,612,613,5,99,0,0,613,614,5,104,0,0,614,176,1,0,0,0,615,
616,5,119,0,0,616,617,5,105,0,0,617,618,5,116,0,0,618,619,5,104,0,0,619,
178,1,0,0,0,620,621,5,101,0,0,621,622,5,110,0,0,622,623,5,117,0,0,623,624,
5,109,0,0,624,625,5,101,0,0,625,626,5,114,0,0,626,627,5,97,0,0,627,628,5,
116,0,0,628,629,5,101,0,0,629,180,1,0,0,0,630,631,5,108,0,0,631,632,5,101,
0,0,632,633,5,116,0,0,633,182,1,0,0,0,634,635,5,101,0,0,635,636,5,97,0,0,
636,637,5,99,0,0,637,638,5,104,0,0,638,184,1,0,0,0,639,640,5,97,0,0,640,
641,5,115,0,0,641,642,5,115,0,0,642,643,5,101,0,0,643,644,5,114,0,0,644,
645,5,116,0,0,645,186,1,0,0,0,646,647,5,105,0,0,647,648,5,110,0,0,648,649,
5,105,0,0,649,650,5,116,0,0,650,651,5,105,0,0,651,652,5,97,0,0,652,653,5,
108,0,0,653,188,1,0,0,0,654,655,5,105,0,0,655,656,5,110,0,0,656,190,1,0,
0,0,657,658,5,102,0,0,658,659,5,114,0,0,659,660,5,101,0,0,660,661,5,115,
0,0,661,662,5,104,0,0,662,192,1,0,0,0,663,664,5,111,0,0,664,665,5,112,0,
0,665,666,5,116,0,0,666,667,5,105,0,0,667,668,5,111,0,0,668,669,5,110,0,
0,669,670,5,45,0,0,670,194,1,0,0,0,671,672,5,97,0,0,672,673,5,108,0,0,673,
674,5,119,0,0,674,675,5,97,0,0,675,676,5,121,0,0,676,677,5,115,0,0,677,196,
1,0,0,0,678,679,5,115,0,0,679,680,5,111,0,0,680,681,5,109,0,0,681,682,5,
101,0,0,682,198,1,0,0,0,683,684,5,111,0,0,684,685,5,110,0,0,685,686,5,101,
0,0,686,200,1,0,0,0,687,688,5,117,0,0,688,689,5,112,0,0,689,690,5,116,0,
0,690,691,5,111,0,0,691,202,1,0,0,0,692,693,5,102,0,0,693,694,5,117,0,0,
694,695,5,110,0,0,695,696,5,99,0,0,696,697,5,116,0,0,697,698,5,105,0,0,698,
699,5,111,0,0,699,700,5,110,0,0,700,204,1,0,0,0,701,702,5,114,0,0,702,703,
5,101,0,0,703,704,5,116,0,0,704,705,5,117,0,0,705,706,5,114,0,0,706,707,
5,110,0,0,707,206,1,0,0,0,708,709,5,105,0,0,709,710,5,102,0,0,710,208,1,
0,0,0,711,712,5,101,0,0,712,713,5,108,0,0,713,714,5,115,0,0,714,715,5,101,
0,0,715,210,1,0,0,0,716,718,2,48,57,0,717,716,1,0,0,0,718,719,1,0,0,0,719,
717,1,0,0,0,719,720,1,0,0,0,720,212,1,0,0,0,721,723,3,231,115,0,722,721,
1,0,0,0,723,724,1,0,0,0,724,722,1,0,0,0,724,725,1,0,0,0,725,726,1,0,0,0,
726,728,5,46,0,0,727,729,3,231,115,0,728,727,1,0,0,0,729,730,1,0,0,0,730,
728,1,0,0,0,730,731,1,0,0,0,731,214,1,0,0,0,732,735,5,39,0,0,733,736,3,233,
116,0,734,736,8,0,0,0,735,733,1,0,0,0,735,734,1,0,0,0,736,737,1,0,0,0,737,
738,5,39,0,0,738,216,1,0,0,0,739,744,5,34,0,0,740,743,3,233,116,0,741,743,
8,1,0,0,742,740,1,0,0,0,742,741,1,0,0,0,743,746,1,0,0,0,744,742,1,0,0,0,
744,745,1,0,0,0,745,747,1,0,0,0,746,744,1,0,0,0,747,748,5,34,0,0,748,218,
1,0,0,0,749,750,5,116,0,0,750,751,5,114,0,0,751,752,5,117,0,0,752,759,5,
101,0,0,753,754,5,102,0,0,754,755,5,97,0,0,755,756,5,108,0,0,756,757,5,115,
0,0,757,759,5,101,0,0,758,749,1,0,0,0,758,753,1,0,0,0,759,220,1,0,0,0,760,
761,3,27,13,0,761,762,3,223,111,0,762,222,1,0,0,0,763,767,3,235,117,0,764,
766,3,237,118,0,765,764,1,0,0,0,766,769,1,0,0,0,767,765,1,0,0,0,767,768,
1,0,0,0,768,224,1,0,0,0,769,767,1,0,0,0,770,771,5,47,0,0,771,772,5,42,0,
0,772,776,1,0,0,0,773,775,9,0,0,0,774,773,1,0,0,0,775,778,1,0,0,0,776,777,
1,0,0,0,776,774,1,0,0,0,777,779,1,0,0,0,778,776,1,0,0,0,779,780,5,42,0,0,
780,781,5,47,0,0,781,782,1,0,0,0,782,783,6,112,0,0,783,226,1,0,0,0,784,785,
5,47,0,0,785,786,5,47,0,0,786,790,1,0,0,0,787,789,8,2,0,0,788,787,1,0,0,
0,789,792,1,0,0,0,790,788,1,0,0,0,790,791,1,0,0,0,791,793,1,0,0,0,792,790,
1,0,0,0,793,794,6,113,0,0,794,228,1,0,0,0,795,798,7,3,0,0,796,798,3,239,
119,0,797,795,1,0,0,0,797,796,1,0,0,0,798,799,1,0,0,0,799,800,6,114,0,0,
800,230,1,0,0,0,801,802,2,48,57,0,802,232,1,0,0,0,803,811,5,92,0,0,804,812,
7,4,0,0,805,806,2,48,51,0,806,807,2,48,55,0,807,812,2,48,55,0,808,809,2,
48,55,0,809,812,2,48,55,0,810,812,2,48,55,0,811,804,1,0,0,0,811,805,1,0,
0,0,811,808,1,0,0,0,811,810,1,0,0,0,812,234,1,0,0,0,813,814,7,5,0,0,814,
236,1,0,0,0,815,816,7,6,0,0,816,238,1,0,0,0,817,818,5,13,0,0,818,821,5,10,
0,0,819,821,7,2,0,0,820,817,1,0,0,0,820,819,1,0,0,0,821,240,1,0,0,0,14,0,
719,724,730,735,742,744,758,767,776,790,797,811,820,1,0,1,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class CycloneLexer extends antlr4.Lexer {

    static grammarFileName = "CycloneLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'->'", "'<->'", "'@'", "'|'", "':'", "'::'", 
                         "':='", "','", "'.'", "'..'", "'='", "'>'", "'>='", 
                         "'#'", "'{'", "'['", "'<'", "'<='", "'('", "'-'", 
                         "'!='", "'}'", "']'", "')'", "';'", "'/'", "'*'", 
                         "'+'", "'xor'", "'=>'", "'!'", "'^'", "'_'", "'++'", 
                         "'--'", "'**'", "'%'", "'||'", "'&&'", "'+='", 
                         "'-='", "'*='", "'/='", "'<<'", "'>>'", "'=='", 
                         "'global'", "'native'", "'debug'", "'log'", "'dot'", 
                         "'output'", "'trace'", "'precision'", "'timeout'", 
                         "'detect'", "'state'", "'node'", "'machine'", "'graph'", 
                         "'transition'", "'trans'", "'edge'", "'record'", 
                         "'const'", "'on'", "'label'", "'invariant'", "'int'", 
                         "'bool'", "'real'", "'char'", "'string'", "'enum'", 
                         "'where'", "'start'", "'final'", "'abstract'", 
                         "'normal'", "'prev'", "'goal'", "'check'", "'for'", 
                         "'stop'", "'at'", "'via'", "'condition'", "'reach'", 
                         "'with'", "'enumerate'", "'let'", "'each'", "'assert'", 
                         "'initial'", "'in'", "'fresh'", "'option-'", "'always'", 
                         "'some'", "'one'", "'upto'", "'function'", "'return'", 
                         "'if'", "'else'" ];
	static symbolicNames = [ null, "ARROW", "BI_ARROW", "AT_SIGN", "BAR", "COLON", 
                          "COLON_COLON", "COLON_EQUAL", "COMMA", "DOT", 
                          "DOTDOT", "EQUAL", "GREATER", "GREATER_EQUAL", 
                          "HASH", "LBRACE", "LBRACK", "LESS", "LESS_EQUAL", 
                          "LPAREN", "MINUS", "NOT_EQUAL", "RBRACE", "RBRACK", 
                          "RPAREN", "SEMI", "SLASH", "STAR", "PLUS", "XOR", 
                          "IMPLIES", "NOT", "HAT", "P_OP_ONE", "PLUS_PLUS", 
                          "MINUS_MINUS", "TIMES_TIMES", "MOD", "OR", "AND", 
                          "ASSIGN_PLUS_EQ", "ASSIGN_MINUS_EQ", "ASSIGN_TIMES_EQ", 
                          "ASSIGN_DIV_EQ", "SHIFT_LEFT", "SHIFT_RIGHT", 
                          "DOUBLE_EQUAL", "GLOBAL", "NATIVE", "DEBUG", "LOG", 
                          "DOT_LITERAL", "OUTPUT", "TRACE", "PRECISION", 
                          "TIMEOUT", "DETECT", "STATE", "NODE", "MACHINE", 
                          "GRAPH", "TRANS1", "TRANS2", "EDGE", "RECORD", 
                          "CONST", "ON", "LABEL", "INVARIANT", "INT", "BOOL", 
                          "REAL", "CHAR", "STRING", "ENUM", "WHERE", "START", 
                          "FINAL", "ABSTRACT", "NORMAL", "PREV", "GOAL", 
                          "CHECK", "FOR", "STOP", "AT", "VIA", "CONDITION", 
                          "REACH", "WITH", "ENUMERATE", "LET", "EACH", "ASSERT", 
                          "INITIAL", "IN", "FRESH", "OPTION", "ALWAYS", 
                          "SOME", "ONE", "UPTO", "FUNCTION", "RETURN", "IF", 
                          "ELSE", "INTLITERAL", "REALLITERAL", "CHARLITERAL", 
                          "STRINGLITERAL", "BOOLLITERAL", "ENUMLITERAL", 
                          "IDENT", "ML_COMMENT", "SL_COMMENT", "WS" ];
	static ruleNames = [ "ARROW", "BI_ARROW", "AT_SIGN", "BAR", "COLON", "COLON_COLON", 
                      "COLON_EQUAL", "COMMA", "DOT", "DOTDOT", "EQUAL", 
                      "GREATER", "GREATER_EQUAL", "HASH", "LBRACE", "LBRACK", 
                      "LESS", "LESS_EQUAL", "LPAREN", "MINUS", "NOT_EQUAL", 
                      "RBRACE", "RBRACK", "RPAREN", "SEMI", "SLASH", "STAR", 
                      "PLUS", "XOR", "IMPLIES", "NOT", "HAT", "P_OP_ONE", 
                      "PLUS_PLUS", "MINUS_MINUS", "TIMES_TIMES", "MOD", 
                      "OR", "AND", "ASSIGN_PLUS_EQ", "ASSIGN_MINUS_EQ", 
                      "ASSIGN_TIMES_EQ", "ASSIGN_DIV_EQ", "SHIFT_LEFT", 
                      "SHIFT_RIGHT", "DOUBLE_EQUAL", "GLOBAL", "NATIVE", 
                      "DEBUG", "LOG", "DOT_LITERAL", "OUTPUT", "TRACE", 
                      "PRECISION", "TIMEOUT", "DETECT", "STATE", "NODE", 
                      "MACHINE", "GRAPH", "TRANS1", "TRANS2", "EDGE", "RECORD", 
                      "CONST", "ON", "LABEL", "INVARIANT", "INT", "BOOL", 
                      "REAL", "CHAR", "STRING", "ENUM", "WHERE", "START", 
                      "FINAL", "ABSTRACT", "NORMAL", "PREV", "GOAL", "CHECK", 
                      "FOR", "STOP", "AT", "VIA", "CONDITION", "REACH", 
                      "WITH", "ENUMERATE", "LET", "EACH", "ASSERT", "INITIAL", 
                      "IN", "FRESH", "OPTION", "ALWAYS", "SOME", "ONE", 
                      "UPTO", "FUNCTION", "RETURN", "IF", "ELSE", "INTLITERAL", 
                      "REALLITERAL", "CHARLITERAL", "STRINGLITERAL", "BOOLLITERAL", 
                      "ENUMLITERAL", "IDENT", "ML_COMMENT", "SL_COMMENT", 
                      "WS", "DIGIT", "EscapeSequence", "IdentifierStart", 
                      "IdentifierPart", "NEWLINE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

CycloneLexer.EOF = antlr4.Token.EOF;
CycloneLexer.ARROW = 1;
CycloneLexer.BI_ARROW = 2;
CycloneLexer.AT_SIGN = 3;
CycloneLexer.BAR = 4;
CycloneLexer.COLON = 5;
CycloneLexer.COLON_COLON = 6;
CycloneLexer.COLON_EQUAL = 7;
CycloneLexer.COMMA = 8;
CycloneLexer.DOT = 9;
CycloneLexer.DOTDOT = 10;
CycloneLexer.EQUAL = 11;
CycloneLexer.GREATER = 12;
CycloneLexer.GREATER_EQUAL = 13;
CycloneLexer.HASH = 14;
CycloneLexer.LBRACE = 15;
CycloneLexer.LBRACK = 16;
CycloneLexer.LESS = 17;
CycloneLexer.LESS_EQUAL = 18;
CycloneLexer.LPAREN = 19;
CycloneLexer.MINUS = 20;
CycloneLexer.NOT_EQUAL = 21;
CycloneLexer.RBRACE = 22;
CycloneLexer.RBRACK = 23;
CycloneLexer.RPAREN = 24;
CycloneLexer.SEMI = 25;
CycloneLexer.SLASH = 26;
CycloneLexer.STAR = 27;
CycloneLexer.PLUS = 28;
CycloneLexer.XOR = 29;
CycloneLexer.IMPLIES = 30;
CycloneLexer.NOT = 31;
CycloneLexer.HAT = 32;
CycloneLexer.P_OP_ONE = 33;
CycloneLexer.PLUS_PLUS = 34;
CycloneLexer.MINUS_MINUS = 35;
CycloneLexer.TIMES_TIMES = 36;
CycloneLexer.MOD = 37;
CycloneLexer.OR = 38;
CycloneLexer.AND = 39;
CycloneLexer.ASSIGN_PLUS_EQ = 40;
CycloneLexer.ASSIGN_MINUS_EQ = 41;
CycloneLexer.ASSIGN_TIMES_EQ = 42;
CycloneLexer.ASSIGN_DIV_EQ = 43;
CycloneLexer.SHIFT_LEFT = 44;
CycloneLexer.SHIFT_RIGHT = 45;
CycloneLexer.DOUBLE_EQUAL = 46;
CycloneLexer.GLOBAL = 47;
CycloneLexer.NATIVE = 48;
CycloneLexer.DEBUG = 49;
CycloneLexer.LOG = 50;
CycloneLexer.DOT_LITERAL = 51;
CycloneLexer.OUTPUT = 52;
CycloneLexer.TRACE = 53;
CycloneLexer.PRECISION = 54;
CycloneLexer.TIMEOUT = 55;
CycloneLexer.DETECT = 56;
CycloneLexer.STATE = 57;
CycloneLexer.NODE = 58;
CycloneLexer.MACHINE = 59;
CycloneLexer.GRAPH = 60;
CycloneLexer.TRANS1 = 61;
CycloneLexer.TRANS2 = 62;
CycloneLexer.EDGE = 63;
CycloneLexer.RECORD = 64;
CycloneLexer.CONST = 65;
CycloneLexer.ON = 66;
CycloneLexer.LABEL = 67;
CycloneLexer.INVARIANT = 68;
CycloneLexer.INT = 69;
CycloneLexer.BOOL = 70;
CycloneLexer.REAL = 71;
CycloneLexer.CHAR = 72;
CycloneLexer.STRING = 73;
CycloneLexer.ENUM = 74;
CycloneLexer.WHERE = 75;
CycloneLexer.START = 76;
CycloneLexer.FINAL = 77;
CycloneLexer.ABSTRACT = 78;
CycloneLexer.NORMAL = 79;
CycloneLexer.PREV = 80;
CycloneLexer.GOAL = 81;
CycloneLexer.CHECK = 82;
CycloneLexer.FOR = 83;
CycloneLexer.STOP = 84;
CycloneLexer.AT = 85;
CycloneLexer.VIA = 86;
CycloneLexer.CONDITION = 87;
CycloneLexer.REACH = 88;
CycloneLexer.WITH = 89;
CycloneLexer.ENUMERATE = 90;
CycloneLexer.LET = 91;
CycloneLexer.EACH = 92;
CycloneLexer.ASSERT = 93;
CycloneLexer.INITIAL = 94;
CycloneLexer.IN = 95;
CycloneLexer.FRESH = 96;
CycloneLexer.OPTION = 97;
CycloneLexer.ALWAYS = 98;
CycloneLexer.SOME = 99;
CycloneLexer.ONE = 100;
CycloneLexer.UPTO = 101;
CycloneLexer.FUNCTION = 102;
CycloneLexer.RETURN = 103;
CycloneLexer.IF = 104;
CycloneLexer.ELSE = 105;
CycloneLexer.INTLITERAL = 106;
CycloneLexer.REALLITERAL = 107;
CycloneLexer.CHARLITERAL = 108;
CycloneLexer.STRINGLITERAL = 109;
CycloneLexer.BOOLLITERAL = 110;
CycloneLexer.ENUMLITERAL = 111;
CycloneLexer.IDENT = 112;
CycloneLexer.ML_COMMENT = 113;
CycloneLexer.SL_COMMENT = 114;
CycloneLexer.WS = 115;



